"use strict";

var quipu = function () {
  function n(n, e) {
    return Math.max(n, e);
  }function e(n, e) {
    return Math.min(n, e);
  }var t = ["Hydrogen", "Helium", "Lithium", "Beryllium"];return { isSame: function isSame(n, e) {
      return n == e;
    }, isNotSame: function isNotSame(n, e) {
      return n != e;
    }, isEmail: function isEmail(n) {
      return new RegExp("^(([^<>()\\[\\]\\\\.,;:\\s@']+(\\.[^<>()\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$").test(n);
    }, getUrlParameters: function getUrlParameters(n) {
      return n.match(/([^?=&]+)(=([^&]*))/g).reduce(function (n, e) {
        return n[e.slice(0, e.indexOf("="))] = e.slice(e.indexOf("=") + 1), n;
      }, {});
    }, isValidJSON: function isValidJSON(n) {
      try {
        return JSON.parse(n), !0;
      } catch (n) {
        return !1;
      }
    }, rgbToHex: function rgbToHex(n, e, t) {
      return ((n << 16) + (e << 8) + t).toString(16).padStart(6, "0");
    }, findMax: function findMax(e) {
      return e.reduce(n);
    }, findMin: function findMin(n) {
      return n.reduce(e);
    }, jsonParse: function jsonParse(n) {
      return JSON.parse(n);
    }, mapArrow: function mapArrow() {
      return t.map(function (n) {
        return n.length;
      });
    } };
}();"undefined" != typeof module && void 0 !== module.exports && (module.exports = quipu);